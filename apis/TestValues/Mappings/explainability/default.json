{
    "score_algorithm_class": {
        "clf_type_score": {
            "value": {
                "RandomForestClassifier": 4,
                "KNeighborsClassifier": 3,
                "SVC": 2,
                "GaussianProcessClassifier": 3,
                "DecisionTreeClassifier": 5,
                "MLPClassifier": 1,
                "AdaBoostClassifier": 3,
                "GaussianNB": 3.5,
                "QuadraticDiscriminantAnalysis": 3,
                "LogisticRegression": 4,
                "LinearRegression": 3.5,
                "Sequential": 1
            },
            "description": "Mapping of Learning techniques to the level of explainability based on on literature research and qualitative analysis of each learning technique. For more information see gh-pages/explainability/taxonomy",
            "label": "Score Mapping"
        }
    },
    "score_model_size": {
        "thresholds": {
            "value": [
                10,
                25,
                50,
                100
            ],
            "description": "Thresholds of how to map model size to a score from 1-5. Example if 10 is the first number it means that a model with 10 or less features would get the best score(5) and if 500 was the last number it would mean that a model with 500 or more features would get the worst score (1), analog for the numbers in between",
            "label": "Score Thresholds"
        }
    },
    "score_correlated_features": {
        "high_cor": {
            "value": 0.95,
            "description": "Threshold value to classify a correlation as highly correlated. Default value is 0.95 meaning every correlation equal or higher than 0.9 would be considered highly correlated",
            "label": "High Correlation Threshold"
        },
        "thresholds": {
            "value": [
                0.05,
                0.15,
                0.25,
                0.4
            ],
            "description": "Thresholds of how to map the percentage of highly correlated features (>= high_cor or default 0.9) to a score from 1-5. Example if 0.05 is the first number it means that training dataset with 5% or less highly correlated variables would get the best score(5) and if 0.4 was the last number it would mean that a training dataset 40% or more highly correlated features would get the worst score (1), analog for the numbers in between",
            "label": "Score Thresholds"
        }
    },
    "score_feature_relevance": {
        "thresholds": {
            "value": [
                0.05,
                0.1,
                0.15,
                0.2
            ],
            "description": "Map the fraction of many features make up 60% of all importance to a Score from 1-5. If the first number in the list is 0.05 it means that 5% or less features make up more than 60% of all importance, which would be a very skewed distribution of the feature importance and result in the worst score of 1, and if the next number is 0.1 it means if the fraction is between 5%-10% the Score would be a 2, analog the other thresholds",
            "label": "Score Thresholds"
        },
        "threshold_outlier": {
            "value": 0.03,
            "description": "The threshold for a score penalty if there are too many outliers in the feature importance distribution. For example if the threshold is 0.03 it means taht if 3% or more features are outliers a penalty with tha value #penalty_outlier would be substacted from the score",
            "label": "Threshold for outliers"
        },
        "penalty_outlier": {
            "value": 0,
            "description": "The penalty that should be applied if the the number of outliers in the feature importance distribution is equal or greater than the #threshold_outlier. For example if this value is 0.5 it would mean if the the theshold is reached 0.5 points will be substacted from score. If the number is set to 0 no penalty will be applied",
            "label": "Penalty for outliers"
        }
    }
}